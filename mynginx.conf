# nginx.conf

# The following line adds the basic module Instana uses to get tracing data.
# It is required that you use the version of this module built by Instana,
# rather than the one shipped in many NGINX distros, as there are some
# modifications in the Instana version that are required for tracing to work

load_module modules/glibc-nginx-1.23.3-ngx_http_ot_module.so;

# Whitelists environment variables used for tracer configuration to avoid
# that NGINX wipes them. This is only needed if instana-config.json
# should contain an empty configuration with "{}" inside to do the
# configuration via these environment variables instead.
env INSTANA_SERVICE_NAME;
env INSTANA_AGENT_HOST;
env INSTANA_AGENT_PORT;
env INSTANA_MAX_BUFFERED_SPANS;
env INSTANA_DEV;

worker_processes auto;
pid /tmp/nginx.pid;
events {
 worker_connections 1024;
}

error_log /tmp/stdout info;

http {
 error_log /tmp/stdout info;

 # The following line loads the Instana libsinstana_sensor library, that
 # gets the tracing data from ngx_http_opentracing_module.so and converts
 # them to Instana AutoTrace tracing data.
 # The content of instana-config.json is discussed as follows.
 #opentracing_load_tracer /usr/local/lib/glibc-libinstana_sensor.so /etc/instana-config.json;

 # Propagates the active span context for upstream requests.
 # Without this configuration, the Instana trace will end at
 # NGINX, and the systems downstream (those to which NGINX
 # routes the requests) monitored by Instana will generate
 # new, unrelated traces
 #opentracing_propagate_context;

 include /etc/nginx/mime.types; 
 client_body_temp_path /tmp/client_temp;
 proxy_temp_path       /tmp/proxy_temp_path;
 fastcgi_temp_path     /tmp/fastcgi_temp;
 uwsgi_temp_path       /tmp/uwsgi_temp;
 scgi_temp_path        /tmp/scgi_temp;

 server {
   listen 8080;
   charset utf-8;
   sendfile on;
   server_name _;
   index index.html;
   error_log  /tmp/error.log;
   access_log /tmp/access.log;

   location /nginx_status {
     stub_status  on;
     access_log   off;
     allow all; # Or the Remote IP of the Instana Host Agent
     #deny  all;
   }

   location / {
     root /code;
     expires -1;
     add_header Pragma "no-cache";
     add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
     try_files $uri /index.html = 404;
   }

   location ~ /health/readiness {
     access_log  off;
     add_header 'Content-Type' 'application/json';
     return 200 '{"status":"ok"}';
   }
 }
}